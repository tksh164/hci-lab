{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "AzureUser",
            "minLength": 1,
            "maxLength": 20,
            "metadata": {
                "description": "The administrator user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password. The password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. And the password must be between 12 and 123 characters long."
            }
        },
        "labHostVmName": {
            "type": "string",
            "defaultValue": "hcilab-vm1",
            "minLength": 1,
            "maxLength": 15,
            "metadata": {
                "description": "The lab hosting virtual machine name."
            }
        },
        "labHostVmSize": {
            "type": "string",
            "defaultValue": "Standard_E16s_v5",
            "allowedValues": [
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D64s_v4",
                "Standard_D16d_v4",
                "Standard_D32d_v4",
                "Standard_D64d_v4",
                "Standard_D16ds_v4",
                "Standard_D32ds_v4",
                "Standard_D64ds_v4",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E16-4s_v3",
                "Standard_E16-8s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32-16s_v3",
                "Standard_E48s_v3",
                "Standard_E64s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E8s_v4",
                "Standard_E16s_v4",
                "Standard_E16s_v5",
                "Standard_E16-8s_v4",
                "Standard_E20s_v4",
                "Standard_E32s_v4",
                "Standard_E32-8s_v4",
                "Standard_E32-16s_v4",
                "Standard_E48s_v4",
                "Standard_E64s_v4",
                "Standard_E64-16s_v4",
                "Standard_E64-32s_v4",
                "Standard_E8d_v4",
                "Standard_E16d_v4",
                "Standard_E20d_v4",
                "Standard_E32d_v4",
                "Standard_E48d_v4",
                "Standard_E64d_v4",
                "Standard_E8ds_v4",
                "Standard_E16ds_v4",
                "Standard_E20ds_v4",
                "Standard_E32ds_v4",
                "Standard_E48ds_v4",
                "Standard_E64ds_v4",
                "Standard_E64-16ds_v4",
                "Standard_E64-32ds_v4"
            ],
            "metadata": {
                "description": "The lab hosting virtual machine size."
            }
        },
        "labHostVmOsDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's OS disk."
            }
        },
        "labHostVmDataDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's data disk."
            }
        },
        "labHostVmDataDiskSize": {
            "type": "int",
            "defaultValue": 64,
            "allowedValues": [
                32,
                64,
                128,
                256,
                512,
                1024
            ],
            "metadata": {
                "description": "The size of the individual data disks in GiB."
            }
        },
        "isHaveEligibleWindowsServerLicense": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, you confirm you have an eligible Windows Server license with Software Assurance or Windows Server subscription to apply this Azure Hybrid Benefit. You can read more about compliance here: http://go.microsoft.com/fwlink/?LinkId=859786"
            }
        },
        "salt": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "The value for generate unique values."
            }
        }
    },
    "variables": {
        // General

        "location": "[resourceGroup().location]",
        "uniqueString": "[substring(uniqueString(resourceGroup().id, parameters('salt')), 0, 6)]",
        "repoUriBase": "https://raw.githubusercontent.com/tksh164/azure-demo-scripts-templates/master/arm-templates/hci-lab/",  // Must end with "/".

        // Lab host virtual machine

        "labHostVmDeploymentName": "vm-and-vnet",
        "labHostVmLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/labhostvm.json')]",

        // Key Vault

        "keyVaultDeploymentName": "key-vault",
        "keyVaultLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/keyvault.json')]",
        "keyVaultName": "[format('hcilab{0}-kv', toLower(variables('uniqueString')))]",
        "secretName": "AdminPassword",

        // Key Vault RBAC

        "keyVaultRbacDeploymentName": "key-vault-rbac",
        "keyVaultRbacLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/keyvault-rbac.json')]",

        // Storage account for Cloud Witness

        "cloudWitnessStorageAccountDeploymentName": "cloud-witness-storage-account",
        "cloudWitnessStorageAccountLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/cloudwitness.json')]",

        // DSC extension

        "dscLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/dsc.json')]",
        "dscBaseUri": "[uri(variables('repoUriBase'), 'dsc/')]",  // Must end with "/".
        "dscExtensionName": "hci-lab-dsc-extension",
        "dscParams": {
            "installRolesFeatures": {
                "deploymentName": "lab-host-roles-and-features-installation",
                "zipUri": "[uri(variables('dscBaseUri'), 'install-roles-and-features.zip')]",
                "scriptName": "install-roles-and-features.ps1",
                "functionName": "install-roles-and-features"
            },
            "rebootLabHost": {
                "deploymentName": "lab-host-reboot-before-vm-creation",
                "zipUri": "[uri(variables('dscBaseUri'), 'reboot.zip')]",
                "scriptName": "reboot.ps1",
                "functionName": "reboot"
            }
        },

        // Custom script extension

        "customScriptLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/customscript.json')]",
        "customScriptBaseUri": "[uri(variables('repoUriBase'), 'customscripts/')]",  // Must end with "/".
        "customScriptExtensionName": "hci-lab-customscript-extension",
        "customScriptParams": {
            "configureLabHost": {
                "deploymentName": "lab-host-configuration",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'configure-lab-host.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\configure-lab-host.ps1"
            },
            "downloadIsoUpdates": {
                "deploymentName": "iso-and-updates-download",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'download-iso-updates.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\download-iso-updates.ps1"
            },
            "createBaseVhd": {
                "deploymentName": "base-vhd-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-base-vhd.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-base-vhd.ps1"
            },
            "createAddsDcVm": {
                "deploymentName": "adds-dc-vm-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-adds-dc-vm.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-adds-dc-vm.ps1"
            },
            "createWacVm": {
                "deploymentName": "wac-vm-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-wac-vm.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-wac-vm.ps1"
            },
            "createHciNodeVm": {
                "deploymentName": "hci-node-vm-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-hci-node-vm.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-hci-node-vm.ps1"
            }
        },

        // Configuration parameters

        "configParameters": {
            "labHost": {
                "storage": {
                    "poolName": "hcisandboxpool",
                    "driveLetter": "V",
                    "volumeLabel": "HCI Lab Data"
                },
                "folderPath": {
                    "transcript": "C:\\temp",
                    "temp": "V:\\temp",
                    "updates": "V:\\temp\\updates",
                    "vhd": "V:\\vhd",
                    "vm": "V:\\vm"
                },
                "vSwitch": {
                    "nat": {
                        "name": "LabHostNAT",
                        "subnet": "192.168.0.0/24",
                        "hostIPAddress": "192.168.0.1",
                        "hostPrefixLength": 24
                    }
                }
            },
            "guestOS": {
                "culture": "en-us",
                "applyUpdates": false
            },
            "addsDC": {
                "vmName": "addsdc",
                "netAdapter": {
                    "management": {
                        "name": "Management",
                        "ipAddress": "192.168.0.4",
                        "prefixLength": 24,
                        "defaultGateway": "192.168.0.1",
                        "dnsServerAddresses": [ "168.63.129.16" ]
                    }
                },
                "domainFqdn": "hci.local"
            },
            "wac": {
                "vmName": "wac",
                "netAdapter": {
                    "management": {
                        "name": "Management",
                        "ipAddress": "192.168.0.8",
                        "prefixLength": 24,
                        "defaultGateway": "192.168.0.1",
                        "dnsServerAddresses": [ "192.168.0.4" ]
                    }
                }
            },
            "hciNode": {
                "osImage": {
                    "sku": "as22h2",
                    "index": 1
                },
                "nodeCount": 2,
                "nodeCountOffset": 1,
                "vmName": "hcinode{0:00}",
                "netAdapter": {
                    "management": {
                        "name": "Management",
                        "ipAddress": "192.168.0.1{0}",
                        "prefixLength": 24,
                        "defaultGateway": "192.168.0.1",
                        "dnsServerAddresses": [ "192.168.0.4" ]
                    },
                    "storage1": {
                        "name": "Storage1",
                        "ipAddress": "172.16.1.1{0}",
                        "prefixLength": 24
                    },
                    "storage2": {
                        "name": "Storage2",
                        "ipAddress": "172.16.2.1{0}",
                        "prefixLength": 24
                    }
                }
            },
            "keyVault": {
                "name": "[variables('keyVaultName')]",
                "secretName": "[variables('secretName')]"
            }
        }
    },
    "resources": [
        // Lab host virtual machine and virtual network.
        {
            "name": "[variables('labHostVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('labHostVmLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('adminUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmSize": {
                        "value": "[parameters('labHostVmSize')]"
                    },
                    "osDiskType": {
                        "value": "[parameters('labHostVmOsDiskType')]"
                    },
                    "dataDiskType": {
                        "value": "[parameters('labHostVmDataDiskType')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('labHostVmDataDiskSize')]"
                    },
                    "isHaveEligibleWindowsServerLicense": {
                        "value": "[parameters('isHaveEligibleWindowsServerLicense')]"
                    },
                    "base64EncodedConfigParameters": {
                        "value": "[base64(string(variables('configParameters')))]"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    }
                }
            }
        },

        // Key Vault
        {
            "name": "[variables('keyVaultDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "secretName": {
                        "value": "[variables('secretName')]"
                    },
                    "secretContent": {
                        "value": "[parameters('adminPassword')]"
                    }
                }
            }
        },

        // Key Vault RBAC
        {
            "name": "[variables('keyVaultRbacDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultRbacLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "servicePrincipalId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))).outputs.principalId.value]"
                    },
                    "roleDefinitionId": {
                        "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]"  // Key Vault Secrets User
                    }
                }
            }
        },

        // Storage account for the HCI cluster witness.
        {
            "name": "[variables('cloudWitnessStorageAccountDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('cloudWitnessStorageAccountLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "hciclusterwitness"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    }
                }
            }
        },

        // Install roles and features.
        {
            "name": "[variables('dscParams').installRolesFeatures.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dscLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('dscExtensionName')]"
                    },
                    "zipUri": {
                        "value": "[variables('dscParams').installRolesFeatures.zipUri]"
                    },
                    "scriptName": {
                        "value": "[variables('dscParams').installRolesFeatures.scriptName]"
                    },
                    "functionName": {
                        "value": "[variables('dscParams').installRolesFeatures.functionName]"
                    }
                }
            }
        },

        // Configure the lab host.
        {
            "name": "[variables('customScriptParams').configureLabHost.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('dscParams').installRolesFeatures.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').configureLabHost.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').configureLabHost.commandToExecute]"
                    }
                }
            }
        },

        // Download ISO files and updates.
        {
            "name": "[variables('customScriptParams').downloadIsoUpdates.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').configureLabHost.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').downloadIsoUpdates.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').downloadIsoUpdates.commandToExecute]"
                    }
                }
            }
        },

        // Create base virtual hard disks.
        {
            "name": "[variables('customScriptParams').createBaseVhd.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').downloadIsoUpdates.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createBaseVhd.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createBaseVhd.commandToExecute]"
                    }
                }
            }
        },

        // Reboot the lab host.
        {
            "name": "[variables('dscParams').rebootLabHost.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createBaseVhd.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dscLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('dscExtensionName')]"
                    },
                    "zipUri": {
                        "value": "[variables('dscParams').rebootLabHost.zipUri]"
                    },
                    "scriptName": {
                        "value": "[variables('dscParams').rebootLabHost.scriptName]"
                    },
                    "functionName": {
                        "value": "[variables('dscParams').rebootLabHost.functionName]"
                    }
                }
            }
        },

        // Create AD DS DC VM.
        {
            "name": "[variables('customScriptParams').createAddsDcVm.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('dscParams').rebootLabHost.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createAddsDcVm.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createAddsDcVm.commandToExecute]"
                    }
                }
            }
        },

        // Create Windows Admin Center VM.
        {
            "name": "[variables('customScriptParams').createWacVm.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createAddsDcVm.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createWacVm.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createWacVm.commandToExecute]"
                    }
                }
            }
        },

        // Create HCI node VMs.
        {
            "name": "[variables('customScriptParams').createHciNodeVm.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createWacVm.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createHciNodeVm.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createHciNodeVm.commandToExecute]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUserName": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        },
        "vmPublicIpFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))).outputs.fqdn.value]"
        }
    }
}
