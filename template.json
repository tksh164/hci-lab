{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "AzureUser",
            "minLength": 1,
            "maxLength": 20,
            "metadata": {
                "description": "The administrator user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password. The password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. And the password must be between 12 and 123 characters long."
            }
        },
        "labHostVmName": {
            "type": "string",
            "defaultValue": "hcilab-vm1",
            "minLength": 1,
            "maxLength": 15,
            "metadata": {
                "description": "The lab hosting virtual machine name."
            }
        },
        "labHostVmSize": {
            "type": "string",
            "defaultValue": "Standard_E16s_v5",
            "allowedValues": [
                // Required VM size capabilities:
                // - Generation 2 VM support
                // - Premium storage support
                // - Accelerated networking support
                // - Nested virtualization support
                // - Non-AMD processor

                // Dsv5-series
                "Standard_D32s_v5",
                "Standard_D48s_v5",
                "Standard_D64s_v5",
                "Standard_D96s_v5",
                // Ddsv5-series
                "Standard_D32ds_v5",
                "Standard_D48ds_v5",
                "Standard_D64ds_v5",
                "Standard_D96ds_v5",
                // Dasv5-series
                // "Standard_D32as_v5",
                // "Standard_D48as_v5",
                // "Standard_D64as_v5",
                // "Standard_D96as_v5",
                // Dadsv5-series
                // "Standard_D32ads_v5",
                // "Standard_D48ads_v5",
                // "Standard_D64ads_v5",
                // "Standard_D96ads_v5",
                // Dlsv5-series
                "Standard_D64ls_v5",
                "Standard_D96ls_v5",
                // Dldsv5-series
                "Standard_D64lds_v5",
                "Standard_D96lds_v5",
                // Dsv4-series
                "Standard_D32s_v4",
                "Standard_D48s_v4",
                "Standard_D64s_v4",
                // Ddsv4-series
                "Standard_D32ds_v4",
                "Standard_D48ds_v4",
                "Standard_D64ds_v4",
                // Dsv3-series
                "Standard_D32s_v3",
                "Standard_D48s_v3",
                "Standard_D64s_v3",
                // Esv5-series
                "Standard_E16s_v5",
                "Standard_E20s_v5",
                "Standard_E32s_v5",
                "Standard_E48s_v5",
                "Standard_E64s_v5",
                "Standard_E96s_v5",
                // Edsv5-series
                "Standard_E16ds_v5",
                "Standard_E20ds_v5",
                "Standard_E32ds_v5",
                "Standard_E48ds_v5",
                "Standard_E64ds_v5",
                "Standard_E96ds_v5",
                // Easv5-series
                // "Standard_E16as_v5",
                // "Standard_E20as_v5",
                // "Standard_E32as_v5",
                // "Standard_E48as_v5",
                // "Standard_E64as_v5",
                // "Standard_E96as_v5",
                // Eadsv5-series
                // "Standard_E16ads_v5",
                // "Standard_E20ads_v5",
                // "Standard_E32ads_v5",
                // "Standard_E48ads_v5",
                // "Standard_E64ads_v5",
                // "Standard_E96ads_v5",
                // Ebsv5 series
                "Standard_E16bs_v5",
                "Standard_E32bs_v5",
                "Standard_E48bs_v5",
                "Standard_E64bs_v5",
                // Ebdsv5 series
                "Standard_E16bds_v5",
                "Standard_E32bds_v5",
                "Standard_E48bds_v5",
                "Standard_E64bds_v5",
                // Esv4-series
                "Standard_E16s_v4",
                "Standard_E20s_v4",
                "Standard_E32s_v4",
                "Standard_E48s_v4",
                "Standard_E64s_v4",
                // Edsv4-series
                "Standard_E16ds_v4",
                "Standard_E20ds_v4",
                "Standard_E32ds_v4",
                "Standard_E48ds_v4",
                "Standard_E64ds_v4",
                // Esv3-series
                "Standard_E16s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E48s_v3",
                "Standard_E64s_v3",
                // Fsv2-series
                "Standard_F64s_v2",
                "Standard_F72s_v2",
                // FX-series
                "Standard_FX12mds",
                "Standard_FX24mds",
                "Standard_FX36mds",
                "Standard_FX48mds"
            ],
            "metadata": {
                "description": "The lab hosting virtual machine size."
            }
        },
        "labHostVmOsDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's OS disk."
            }
        },
        "labHostVmDataDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's data disk."
            }
        },
        "labHostVmDataDiskSize": {
            "type": "int",
            "defaultValue": 64,
            "allowedValues": [
                32,
                64,
                128,
                256,
                512,
                1024
            ],
            "metadata": {
                "description": "The size of the individual data disks in GiB."
            }
        },
        "isHaveEligibleWindowsServerLicense": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, you confirm you have an eligible Windows Server license with Software Assurance or Windows Server subscription to apply this Azure Hybrid Benefit. You can read more about compliance here: http://go.microsoft.com/fwlink/?LinkId=859786"
            }
        },
        "isAutoshutdownEnabled": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, will be auto-shutdown configured."
            }
        },
        "autoshutdownTime": {
            "type": "string",
            "defaultValue": "22:00",
            "metadata": {
                "description": "The auto-shutdown time."
            }
        },
        "autoshutdownTimeZone": {
            "type": "string",
            "defaultValue": "UTC",
            "metadata": {
                "description": "The time zone for auto-shutdown time."
            }
        },
        "labVmOsCulture": {
            "type": "string",
            "defaultValue": "en-us",
            "allowedValues": [
                "en-us",
                "ja-jp"
            ],
            "metadata": {
                "description": "The operating system's culture of the lab virtual machines. This affects such as language and input method of the operating system."
            }
        },
        "isInstallUpdatesToLabVm": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, operating system's updates will be installed during the deployment."
            }
        },
        "hciNodeOsSku": {
            "type": "string",
            "defaultValue": "as22h2",
            "allowedValues": [
                "as22h2",  // Azure Stack HCI 22H2
                "as21h2",  // Azure Stack HCI 21H2
                "as20h2",  // Azure Stack HCI 20H2
                "ws2022"   // Windows Server 2022
            ],
            "metadata": {
                "description": "The operating system for the HCI node virtual machines."
            }
        },
        "hciNodeOsImageIndex": {
            "type": "int",
            "defaultValue": 1,
            "allowedValues": [
                1,  // For Azure Stack HCI
                //3,  // For Windows Server Datacenter Server Core
                4   // For Windows Server Datacenter with Desktop Experience
            ],
            "metadata": {
                "description": "The image index of the operating system for the HCI node virtual machines."
            }
        },
        "hciNodeCount": {
            "type": "int",
            "defaultValue": 2,
            "minValue": 2,
            "maxValue": 8,
            "metadata": {
                "description": "Number of HCI nodes to deploy."
            }
        },
        "addsDomainFqdn": {
            "type": "string",
            "defaultValue": "hci.local",
            "metadata": {
                "description": "The Active Direcory Domain Services domain FQDN."
            }
        },
        "isCreateHciCluster": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, automatically create an HCI cluster during the deployment."
            }
        },
        "repoUriBase": {
            "type": "string",
            "defaultValue": "https://raw.githubusercontent.com/tksh164/azure-demo-scripts-templates/master/arm-templates/hci-lab/",
            "metadata": {
                "description": "The base URI of template's repository. The value must end with '/'."
            }
        },
        "salt": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "The value for generate unique values."
            }
        }
    },
    "variables": {
        // General

        "location": "[resourceGroup().location]",
        "uniqueString": "[substring(uniqueString(resourceGroup().id, parameters('salt')), 0, 6)]",
        "repoUriBase": "[if(endsWith(parameters('repoUriBase'), '/'), parameters('repoUriBase'), concat(parameters('repoUriBase'), '/'))]",

        // Lab host virtual machine

        "labHostVmDeploymentName": "vm-and-vnet",
        "labHostVmLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/labhostvm.json')]",

        // Key Vault

        "keyVaultDeploymentName": "key-vault",
        "keyVaultLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/keyvault.json')]",
        "keyVaultName": "[format('hcilab{0}-kv', toLower(variables('uniqueString')))]",

        // Storage account for Cloud Witness

        "cloudWitnessStorageAccountDeploymentName": "cloud-witness-storage-account",
        "cloudWitnessStorageAccountLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/cloudwitness.json')]",

        // Key Vault RBAC

        "keyVaultRbacDeploymentName": "key-vault-rbac",
        "keyVaultRbacLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/keyvault-rbac.json')]",

        // DSC extension

        "dscLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/dsc.json')]",
        "dscBaseUri": "[uri(variables('repoUriBase'), 'dsc/')]",  // Must end with "/".
        "dscExtensionName": "hci-lab-dsc-extension",
        "dscParams": {
            "installRolesFeatures": {
                "deploymentName": "lab-host-roles-and-features-installation",
                "zipUri": "[uri(variables('dscBaseUri'), 'install-roles-and-features.zip')]",
                "scriptName": "install-roles-and-features.ps1",
                "functionName": "install-roles-and-features"
            },
            "rebootLabHost": {
                "deploymentName": "lab-host-reboot-before-vm-creation",
                "zipUri": "[uri(variables('dscBaseUri'), 'reboot.zip')]",
                "scriptName": "reboot.ps1",
                "functionName": "reboot"
            }
        },

        // Custom script extension

        "customScriptLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/customscript.json')]",
        "customScriptBaseUri": "[uri(variables('repoUriBase'), 'customscripts/')]",  // Must end with "/".
        "customScriptExtensionName": "hci-lab-customscript-extension",
        "customScriptParams": {
            "configureLabHost": {
                "deploymentName": "lab-host-configuration",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'configure-lab-host.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\configure-lab-host.ps1"
            },
            "downloadIsoUpdates": {
                "deploymentName": "iso-and-updates-download",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'download-iso-updates.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'download-iso-updates-asset-urls.psd1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\download-iso-updates.ps1"
            },
            "createBaseVhd": {
                "deploymentName": "base-vhd-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-base-vhd.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'create-base-vhd-job.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-base-vhd.ps1"
            },
            "createVm": {
                "deploymentName": "vm-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-vm.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'create-vm-job-addsdc.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'create-vm-job-wac.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'create-vm-job-hcinode.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-vm.ps1"
            },
            "createHciCluster": {
                "deploymentName": "hci-cluster-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-hci-cluster.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'cluster-test-categories-en-us.psd1')]",
                    "[uri(variables('customScriptBaseUri'), 'cluster-test-categories-ja-jp.psd1')]",
                    "[uri(variables('customScriptBaseUri'), 'shared.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-hci-cluster.ps1"
            }
        },

        // Configuration parameters

        "labConfig": {
            "labHost": {
                "storage": {
                    "poolName": "hcisandboxpool",
                    "driveLetter": "V",
                    "volumeLabel": "HCI Lab Data"
                },
                "folderPath": {
                    "log": "C:\\temp",
                    "temp": "V:\\temp",
                    "updates": "V:\\temp\\updates",
                    "vhd": "V:\\vhd",
                    "vm": "V:\\vm"
                },
                "vSwitch": {
                    "nat": {
                        "name": "NATSwitch"
                    }
                },
                "netNat": [
                    {
                        "name": "ManagementNAT",
                        "InternalAddressPrefix": "172.16.0.0/24",
                        "hostInternalIPAddress": "172.16.0.1",
                        "hostInternalPrefixLength": 24
                    },
                    {
                        "name": "ComputeNAT",
                        "InternalAddressPrefix": "10.0.0.0/16",
                        "hostInternalIPAddress": "10.0.0.1",
                        "hostInternalPrefixLength": 16
                    }
                ]
            },
            "guestOS": {
                "culture": "[parameters('labVmOsCulture')]",
                "applyUpdates": "[parameters('isInstallUpdatesToLabVm')]"
            },
            "addsDomain": {
                "fqdn": "[parameters('addsDomainFqdn')]"
            },
            "addsDC": {
                "vmName": "addsdc",
                "maximumRamBytes": 2147483648,
                "netAdapter": {
                    "management": {
                        "name": "Management",
                        "ipAddress": "172.16.0.2",
                        "prefixLength": 24,
                        "defaultGateway": "172.16.0.1",
                        "dnsServerAddresses": [ "168.63.129.16" ]
                    }
                }
            },
            "wac": {
                "vmName": "wac",
                "maximumRamBytes": 6442450944,
                "netAdapter": {
                    "management": {
                        "name": "Management",
                        "ipAddress": "172.16.0.3",
                        "prefixLength": 24,
                        "defaultGateway": "172.16.0.1",
                        "dnsServerAddresses": [ "172.16.0.2" ]
                    }
                }
            },
            "hciNode": {
                "operatingSystem": {
                    "sku": "[parameters('hciNodeOsSku')]",
                    "imageIndex": "[parameters('hciNodeOsImageIndex')]"
                },
                "nodeCount": "[parameters('hciNodeCount')]",
                "vmNameOffset": 1,
                "vmName": "hcinode{0:00}",  // vmNameOffset + ZeroBasedNodeIndex
                "dataDiskSizeBytes": 107374182400,
                "netAdapter": {
                    "ipAddressOffset": 11,
                    "management": {
                        "name": "Management",
                        "ipAddress": "172.16.0.{0}",  // ipAddressOffset + ZeroBasedNodeIndex
                        "prefixLength": 24,
                        "defaultGateway": "172.16.0.1",
                        "dnsServerAddresses": [ "172.16.0.2" ]
                    },
                    "compute": {
                        "name": "Compute",
                        "ipAddress": "10.0.0.{0}",  // ipAddressOffset + ZeroBasedNodeIndex
                        "prefixLength": 16
                    },
                    "storage1": {
                        "name": "Storage1",
                        "vlanId": 4001,
                        "ipAddress": "172.20.1.{0}",  // ipAddressOffset + ZeroBasedNodeIndex
                        "prefixLength": 24
                    },
                    "storage2": {
                        "name": "Storage2",
                        "vlanId": 4002,
                        "ipAddress": "172.20.2.{0}",  // ipAddressOffset + ZeroBasedNodeIndex
                        "prefixLength": 24
                    }
                }
            },
            "hciCluster": {
                "name": "hciclus",
                "ipAddress": "172.16.0.200"
            },
            "keyVault": {
                "name": "[variables('keyVaultName')]",
                "secretName": {
                    "adminPassword": "AdminPassword",
                    "cloudWitnessStorageAccountName": "CloudWitnessStorageAccountName",
                    "cloudWitnessStorageAccountKey": "CloudWitnessStorageAccountKey"
                }
            }
        }
    },
    "resources": [
        // Key Vault
        {
            "name": "[variables('keyVaultDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    }
                }
            }
        },

        // Lab host virtual machine and virtual network.
        {
            "name": "[variables('labHostVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('labHostVmLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('adminUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmSize": {
                        "value": "[parameters('labHostVmSize')]"
                    },
                    "osDiskType": {
                        "value": "[parameters('labHostVmOsDiskType')]"
                    },
                    "dataDiskType": {
                        "value": "[parameters('labHostVmDataDiskType')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('labHostVmDataDiskSize')]"
                    },
                    "isHaveEligibleWindowsServerLicense": {
                        "value": "[parameters('isHaveEligibleWindowsServerLicense')]"
                    },
                    "base64EncodedLabConfig": {
                        "value": "[base64(string(variables('labConfig')))]"
                    },
                    "isAutoshutdownEnabled": {
                        "value": "[parameters('isAutoshutdownEnabled')]"
                    },
                    "autoshutdownTime": {
                        "value": "[parameters('autoshutdownTime')]"
                    },
                    "autoshutdownTimeZone": {
                        "value": "[parameters('autoshutdownTimeZone')]"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "secretNameForAdminPassword": {
                        "value": "[variables('labConfig').keyVault.secretName.adminPassword]"
                    }
                }
            }
        },

        // Storage account for the HCI cluster witness.
        {
            "name": "[variables('cloudWitnessStorageAccountDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('cloudWitnessStorageAccountLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "hciclusterwitness"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    },
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "secretNameForStorageAccountName": {
                        "value": "[variables('labConfig').keyVault.secretName.cloudWitnessStorageAccountName]"
                    },
                    "secretNameForStorageAccountKey": {
                        "value": "[variables('labConfig').keyVault.secretName.cloudWitnessStorageAccountKey]"
                    }
                }
            }
        },

        // Key Vault RBAC
        {
            "name": "[variables('keyVaultRbacDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultDeploymentName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('keyVaultRbacLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "keyVaultName": {
                        "value": "[variables('keyVaultName')]"
                    },
                    "servicePrincipalId": {
                        "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))).outputs.principalId.value]"
                    },
                    "roleDefinitionId": {
                        "value": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4633458b-17de-408a-b874-0445c86b69e6')]"  // Key Vault Secrets User
                    }
                }
            }
        },

        // Install roles and features.
        {
            "name": "[variables('dscParams').installRolesFeatures.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultRbacDeploymentName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))]",
                "[resourceId('Microsoft.Resources/deployments', variables('cloudWitnessStorageAccountDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dscLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('dscExtensionName')]"
                    },
                    "zipUri": {
                        "value": "[variables('dscParams').installRolesFeatures.zipUri]"
                    },
                    "scriptName": {
                        "value": "[variables('dscParams').installRolesFeatures.scriptName]"
                    },
                    "functionName": {
                        "value": "[variables('dscParams').installRolesFeatures.functionName]"
                    }
                }
            }
        },

        // Configure the lab host.
        {
            "name": "[variables('customScriptParams').configureLabHost.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('dscParams').installRolesFeatures.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').configureLabHost.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').configureLabHost.commandToExecute]"
                    }
                }
            }
        },

        // Download ISO files and updates.
        {
            "name": "[variables('customScriptParams').downloadIsoUpdates.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').configureLabHost.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').downloadIsoUpdates.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').downloadIsoUpdates.commandToExecute]"
                    }
                }
            }
        },

        // Create base virtual hard disks.
        {
            "name": "[variables('customScriptParams').createBaseVhd.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').downloadIsoUpdates.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createBaseVhd.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createBaseVhd.commandToExecute]"
                    }
                }
            }
        },

        // Reboot the lab host.
        {
            "name": "[variables('dscParams').rebootLabHost.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createBaseVhd.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dscLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('dscExtensionName')]"
                    },
                    "zipUri": {
                        "value": "[variables('dscParams').rebootLabHost.zipUri]"
                    },
                    "scriptName": {
                        "value": "[variables('dscParams').rebootLabHost.scriptName]"
                    },
                    "functionName": {
                        "value": "[variables('dscParams').rebootLabHost.functionName]"
                    }
                }
            }
        },

        // Create VMs.
        {
            "name": "[variables('customScriptParams').createVm.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('keyVaultRbacDeploymentName'))]",  // Use secrets by VM's managed identity in the custom script.
                "[resourceId('Microsoft.Resources/deployments', variables('dscParams').rebootLabHost.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createVm.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createVm.commandToExecute]"
                    }
                }
            }
        },

        // Create an HCI cluster.
        {
            "condition": "[parameters('isCreateHciCluster')]",
            "name": "[variables('customScriptParams').createHciCluster.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2022-09-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createVm.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createHciCluster.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createHciCluster.commandToExecute]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUserName": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        },
        "vmPublicIpFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))).outputs.fqdn.value]"
        }
    }
}
