{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminUserName": {
            "type": "string",
            "defaultValue": "AzureUser",
            "minLength": 1,
            "maxLength": 20,
            "metadata": {
                "description": "The administrator user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "The administrator password. The password must have 3 of the following: 1 lower case character, 1 upper case character, 1 number, and 1 special character. And the password must be between 12 and 123 characters long."
            }
        },
        "labHostVmName": {
            "type": "string",
            "defaultValue": "hcilab-vm1",
            "minLength": 1,
            "maxLength": 15,
            "metadata": {
                "description": "The lab hosting virtual machine name."
            }
        },
        "labHostVmSize": {
            "type": "string",
            "defaultValue": "Standard_E16s_v5",
            "allowedValues": [
                "Standard_D16s_v3",
                "Standard_D32s_v3",
                "Standard_D64s_v3",
                "Standard_D16s_v4",
                "Standard_D32s_v4",
                "Standard_D64s_v4",
                "Standard_D16d_v4",
                "Standard_D32d_v4",
                "Standard_D64d_v4",
                "Standard_D16ds_v4",
                "Standard_D32ds_v4",
                "Standard_D64ds_v4",
                "Standard_E8s_v3",
                "Standard_E16s_v3",
                "Standard_E16-4s_v3",
                "Standard_E16-8s_v3",
                "Standard_E20s_v3",
                "Standard_E32s_v3",
                "Standard_E32-8s_v3",
                "Standard_E32-16s_v3",
                "Standard_E48s_v3",
                "Standard_E64s_v3",
                "Standard_E64-16s_v3",
                "Standard_E64-32s_v3",
                "Standard_E8s_v4",
                "Standard_E16s_v4",
                "Standard_E16s_v5",
                "Standard_E16-8s_v4",
                "Standard_E20s_v4",
                "Standard_E32s_v4",
                "Standard_E32-8s_v4",
                "Standard_E32-16s_v4",
                "Standard_E48s_v4",
                "Standard_E64s_v4",
                "Standard_E64-16s_v4",
                "Standard_E64-32s_v4",
                "Standard_E8d_v4",
                "Standard_E16d_v4",
                "Standard_E20d_v4",
                "Standard_E32d_v4",
                "Standard_E48d_v4",
                "Standard_E64d_v4",
                "Standard_E8ds_v4",
                "Standard_E16ds_v4",
                "Standard_E20ds_v4",
                "Standard_E32ds_v4",
                "Standard_E48ds_v4",
                "Standard_E64ds_v4",
                "Standard_E64-16ds_v4",
                "Standard_E64-32ds_v4"
            ],
            "metadata": {
                "description": "The lab hosting virtual machine size."
            }
        },
        "labHostVmOsDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS",
                "Standard_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's OS disk."
            }
        },
        "labHostVmDataDiskType": {
            "type": "string",
            "defaultValue": "StandardSSD_LRS",
            "allowedValues": [
                "Premium_LRS",
                "StandardSSD_LRS"
            ],
            "metadata": {
                "description": "The Storage type of the lab hosting virtual machine's data disk."
            }
        },
        "labHostVmDataDiskSize": {
            "type": "int",
            "defaultValue": 64,
            "allowedValues": [
                32,
                64,
                128,
                256,
                512,
                1024
            ],
            "metadata": {
                "description": "The size of the individual data disks in GiB."
            }
        },
        "isHaveEligibleWindowsServerLicense": {
            "type": "bool",
            "defaultValue": false,
            "metadata": {
                "description": "By specifying True, you confirm you have an eligible Windows Server license with Software Assurance or Windows Server subscription to apply this Azure Hybrid Benefit. You can read more about compliance here: http://go.microsoft.com/fwlink/?LinkId=859786"
            }
        },
        "salt": {
            "type": "string",
            "defaultValue": "[utcNow()]",
            "metadata": {
                "description": "The value for generate unique values."
            }
        }
    },
    "variables": {
        // General

        "location": "[resourceGroup().location]",
        "uniqueString": "[substring(uniqueString(resourceGroup().id, parameters('salt')), 0, 6)]",
        "repoUriBase": "https://raw.githubusercontent.com/tksh164/azure-demo-scripts-templates/master/arm-templates/hci-lab/",  // Must end with "/".

        // Lab host virtual machine

        "labHostVmDeploymentName": "vm-and-vnet",
        "labHostVmLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/labhostvm.json')]",

        // Storage account for Cloud Witness

        "cloudWitnessStorageAccountDeploymentName": "cloud-witness-storage-account",
        "cloudWitnessStorageAccountLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/cloudwitness.json')]",

        // Custom script extension

        "customScriptLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/customscript.json')]",
        "customScriptBaseUri": "[uri(variables('repoUriBase'), 'customscripts/')]",  // Must end with "/".
        "customScriptExtensionName": "hci-lab-configuration",
        "customScriptParams": {
            "tweaks": {
                "deploymentName": "tweaks",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'tweaks.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'common.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\tweaks.ps1"
            },
            "createVolume": {
                "deploymentName": "volume-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-volume.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'common.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-volume.ps1"
            },
            "downloadIso": {
                "deploymentName": "iso-download",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'download-iso.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'common.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\download-iso.ps1"
            },
            // "installWac": {
            //     "deploymentName": "wac-installation",
            //     "fileUris": [
            //         "[uri(variables('customScriptBaseUri'), 'install-wac.ps1')]",
            //         "[uri(variables('customScriptBaseUri'), 'common.psm1')]"
            //     ],
            //     "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\install-wac.ps1"
            // },
            "createBaseVhd": {
                "deploymentName": "base-vhd-creation",
                "fileUris": [
                    "[uri(variables('customScriptBaseUri'), 'create-base-vhd.ps1')]",
                    "[uri(variables('customScriptBaseUri'), 'common.psm1')]"
                ],
                "commandToExecute": "powershell.exe -ExecutionPolicy Unrestricted -File .\\create-base-vhd.ps1"
            }
        },

        // DSC extension

        "dscLinkedTemplateUri": "[uri(variables('repoUriBase'), 'linkedtemplates/dsc.json')]",
        "dscBaseUri": "[uri(variables('repoUriBase'), 'dsc/')]",  // Must end with "/".
        "dscExtensionName": "hci-lab-configuration-dsc",
        "dscParams": {
            "installRolesFeatures": {
                "deploymentName": "roles-and-features-installation",
                "zipUri": "[uri(variables('dscBaseUri'), 'install-roles-and-features.zip')]",
                "scriptName": "install-roles-and-features.ps1",
                "functionName": "install-roles-and-features"
            }
        },

        // Configuration parameters

        "configParameters": {
            "labHostStorage": {
                "storagePoolName": "hcisandboxpool",
                "driveLetter": "V",
                "volumeLabel": "HCI Lab Data"
            },
            "folderPath": {
                "transcript": "C:\\temp",
                "temp": "V:\\temp",
                "vhd": "V:\\vhd",
                "vm": "V:\\vm"
            },
            "hciNode": {
                "operatingSystem": "as22h2",
                "culture": "en-us",
                "imageIndex": 1
            }
        }
    },
    "resources": [
        // Lab host virtual machine and virtual network.
        {
            "name": "[variables('labHostVmDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('labHostVmLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "vmName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "adminUserName": {
                        "value": "[parameters('adminUserName')]"
                    },
                    "adminPassword": {
                        "value": "[parameters('adminPassword')]"
                    },
                    "vmSize": {
                        "value": "[parameters('labHostVmSize')]"
                    },
                    "osDiskType": {
                        "value": "[parameters('labHostVmOsDiskType')]"
                    },
                    "dataDiskType": {
                        "value": "[parameters('labHostVmDataDiskType')]"
                    },
                    "dataDiskSize": {
                        "value": "[parameters('labHostVmDataDiskSize')]"
                    },
                    "isHaveEligibleWindowsServerLicense": {
                        "value": "[parameters('isHaveEligibleWindowsServerLicense')]"
                    },
                    "base64EncodedConfigParameters": {
                        "value": "[base64(string(variables('configParameters')))]"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    }
                }
            }
        },

        // Storage account for the HCI cluster witness.
        {
            "name": "[variables('cloudWitnessStorageAccountDeploymentName')]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('cloudWitnessStorageAccountLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "storageAccountNamePrefix": {
                        "value": "hciclusterwitness"
                    },
                    "uniqueString": {
                        "value": "[variables('uniqueString')]"
                    }
                }
            }
        },

        // Tweaks.
        {
            "name": "[variables('customScriptParams').tweaks.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').tweaks.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').tweaks.commandToExecute]"
                    }
                }
            }
        },

        // Create volume.
        {
            "name": "[variables('customScriptParams').createVolume.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').tweaks.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createVolume.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createVolume.commandToExecute]"
                    }
                }
            }
        },

        // Download ISO files.
        {
            "name": "[variables('customScriptParams').downloadIso.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createVolume.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').downloadIso.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').downloadIso.commandToExecute]"
                    }
                }
            }
        },

        // Install Windows Admin Center.
        // {
        //     "name": "[variables('customScriptParams').installWac.deploymentName]",
        //     "type": "Microsoft.Resources/deployments",
        //     "apiVersion": "2021-04-01",
        //     "dependsOn": [
        //         "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').downloadIso.deploymentName)]"
        //     ],
        //     "properties": {
        //         "mode": "Incremental",
        //         "templateLink": {
        //             "uri": "[variables('customScriptLinkedTemplateUri')]",
        //             "contentVersion": "1.0.0.0"
        //         },
        //         "parameters": {
        //             "location": {
        //                 "value": "[variables('location')]"
        //             },
        //             "parentVmResourceName": {
        //                 "value": "[parameters('labHostVmName')]"
        //             },
        //             "extensionName": {
        //                 "value": "[variables('customScriptExtensionName')]"
        //             },
        //             "fileUris": {
        //                 "value": "[variables('customScriptParams').installWac.fileUris]"
        //             },
        //             "commandToExecute": {
        //                 "value": "[variables('customScriptParams').installWac.commandToExecute]"
        //             }
        //         }
        //     }
        // },

        // Create base virtual hard disks.
        {
            "name": "[variables('customScriptParams').createBaseVhd.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').downloadIso.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('customScriptLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('customScriptExtensionName')]"
                    },
                    "fileUris": {
                        "value": "[variables('customScriptParams').createBaseVhd.fileUris]"
                    },
                    "commandToExecute": {
                        "value": "[variables('customScriptParams').createBaseVhd.commandToExecute]"
                    }
                }
            }
        },

        // Install roles and features.
        {
            "name": "[variables('dscParams').installRolesFeatures.deploymentName]",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2021-04-01",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deployments', variables('customScriptParams').createBaseVhd.deploymentName)]"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('dscLinkedTemplateUri')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[variables('location')]"
                    },
                    "parentVmResourceName": {
                        "value": "[parameters('labHostVmName')]"
                    },
                    "extensionName": {
                        "value": "[variables('dscExtensionName')]"
                    },
                    "zipUri": {
                        "value": "[variables('dscParams').installRolesFeatures.zipUri]"
                    },
                    "scriptName": {
                        "value": "[variables('dscParams').installRolesFeatures.scriptName]"
                    },
                    "functionName": {
                        "value": "[variables('dscParams').installRolesFeatures.functionName]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "adminUserName": {
            "type": "string",
            "value": "[parameters('adminUserName')]"
        },
        "vmPublicIpFqdn": {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.Resources/deployments', variables('labHostVmDeploymentName'))).outputs.fqdn.value]"
        }
    }
}
